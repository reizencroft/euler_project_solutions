# The sequence of triangle numbers is generated by adding the natural numbers. 
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
# The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#  1: 1
#  3: 1, 3
#  6: 1, 2, 3, 6
# 10: 1, 2, 5, 10
# 15: 1, 3, 5, 15
# 21: 1, 3, 7, 21
# 28: 1, 2, 4, 7, 14, 28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

import math

def count_divisor(n):
    if n == 0:
        return 0
    if n == 1:
        return 1
    d = 0
    for i in range(2, int(n/2) + 1):
        # print(i)
        if (n%i) == 0:
            d += 1

    return d + 1


s = 1
t = 0
ds = 0
oldds = 0

while ds < 500:
    t += s
    s += 1
    if t % 2 == 0:
        ds = count_divisor(t)
        if ds > oldds:
            oldds = ds
            print("%d : %d" % (t, ds))

print("%d : %d" % (t, ds))

